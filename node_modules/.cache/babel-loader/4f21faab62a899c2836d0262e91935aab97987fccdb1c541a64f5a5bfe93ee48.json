{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\easfefh\\\\Pruebas\\\\Preguntas\\\\preguntas\\\\src\\\\Componentes\\\\ComponentePregunta.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListaPreguntas = require('../Preguntas/preguntas');\nexport default function ComponentePregunta(_ref) {\n  _s();\n  let {\n    PreguntasRespondidas,\n    Respuestas\n  } = _ref;\n  const [indicePregunta, setIndicePregunta] = useState(Math.round(Math.random() * (ListaPreguntas.length - 1)));\n  /* \r\n  do {\r\n      setIndicePregunta(Math.round(Math.random()*(ListaPreguntas.length-1)))\r\n  }\r\n  while (PreguntasRespondidas.includes(indicePregunta))\r\n  */\n  let PreguntasAgregadas = [];\n  let IndicesOriginales = [];\n  let NuevoOrdenPosibilidades = [];\n  let Pregunta;\n  let Respuesta;\n  let Correctas = 0;\n  let Incorrectas = 0;\n  const [TestFinalizado, setTestFinalizado] = useState(false);\n  for (let i = 0; i <= 3; i++) {\n    do {\n      Pregunta = Math.round(Math.random() * 3);\n    } while (PreguntasAgregadas.includes(Pregunta));\n    NuevoOrdenPosibilidades.push(ListaPreguntas[indicePregunta].posibilidades[Pregunta]);\n    PreguntasAgregadas.push(Pregunta);\n    IndicesOriginales.push(ListaPreguntas[indicePregunta].posibilidades.indexOf(Pregunta));\n  }\n  const confirmar = s => {\n    s.preventDefault();\n    if (Respuesta === undefined) {\n      alert('Indique una respuesta antes de continuar');\n      return;\n    }\n\n    /*  console.log(Respuesta.RtaElegida)\r\n     console.log(ListaPreguntas[indicePregunta].respuesta)\r\n     console.log(Respuesta.RtaElegida===ListaPreguntas[indicePregunta].respuesta) */\n    /* if (Respuesta.RtaElegida===ListaPreguntas[indicePregunta].respuesta){\r\n        Correctas++\r\n    }\r\n    else if (Respuesta.RtaElegida!==ListaPreguntas[indicePregunta].respuesta){\r\n        Incorrectas++\r\n    }\r\n     */\n    Respuesta.RtaElegida === ListaPreguntas[indicePregunta].respuesta ? Correctas++ : Incorrectas++;\n    Respuestas.push(Respuesta);\n    console.log(Respuestas);\n    PreguntasRespondidas.push(indicePregunta);\n    let indice;\n    do {\n      indice = Math.round(Math.random() * (ListaPreguntas.length - 1));\n    } while (PreguntasRespondidas.includes(indice));\n    if (PreguntasRespondidas.length === 5) {\n      setTestFinalizado(true);\n      console.log(TestFinalizado);\n      return;\n    }\n    setIndicePregunta(indice);\n  };\n  function HandleCheck(a) {\n    Respuesta = {\n      indicePregunta: indicePregunta,\n      RtaElegida: NuevoOrdenPosibilidades[a]\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [TestFinalizado && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TestFinalizado\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Test finalizado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), !TestFinalizado && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ComponentePregunta\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [ListaPreguntas[indicePregunta].pregunta, ListaPreguntas[indicePregunta].lineas.map(linea => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: linea\n        }, ListaPreguntas[indicePregunta].lineas.indexOf(linea), false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: confirmar,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"opcion\",\n              onClick: () => HandleCheck(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this), \" \", NuevoOrdenPosibilidades[0], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"opcion\",\n              onClick: () => HandleCheck(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this), \" \", NuevoOrdenPosibilidades[1], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"opcion\",\n              onClick: () => HandleCheck(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this), \" \", NuevoOrdenPosibilidades[2], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"opcion\",\n              onClick: () => HandleCheck(3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this), \" \", NuevoOrdenPosibilidades[3], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Confirmar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 13\n  }, this);\n}\n_s(ComponentePregunta, \"W+nesXGpR9AJTNqYBh8O2HWTCWI=\");\n_c = ComponentePregunta;\nvar _c;\n$RefreshReg$(_c, \"ComponentePregunta\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ListaPreguntas","require","ComponentePregunta","_ref","_s","PreguntasRespondidas","Respuestas","indicePregunta","setIndicePregunta","Math","round","random","length","PreguntasAgregadas","IndicesOriginales","NuevoOrdenPosibilidades","Pregunta","Respuesta","Correctas","Incorrectas","TestFinalizado","setTestFinalizado","i","includes","push","posibilidades","indexOf","confirmar","s","preventDefault","undefined","alert","RtaElegida","respuesta","console","log","indice","HandleCheck","a","children","className","fileName","_jsxFileName","lineNumber","columnNumber","pregunta","lineas","map","linea","onSubmit","type","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/santi/Desktop/easfefh/Pruebas/Preguntas/preguntas/src/Componentes/ComponentePregunta.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nconst ListaPreguntas = require('../Preguntas/preguntas')\r\n\r\n\r\n\r\nexport default function ComponentePregunta  ({PreguntasRespondidas , Respuestas})  {\r\n    \r\n    \r\n        \r\n    const [indicePregunta , setIndicePregunta] = useState(Math.round(Math.random()*(ListaPreguntas.length-1)))\r\n    /* \r\n    do {\r\n        setIndicePregunta(Math.round(Math.random()*(ListaPreguntas.length-1)))\r\n    }\r\n    while (PreguntasRespondidas.includes(indicePregunta))\r\n */\r\n    let PreguntasAgregadas = []\r\n    let IndicesOriginales = []\r\n    let NuevoOrdenPosibilidades = []\r\n    let Pregunta\r\n    let Respuesta\r\n\r\n    let Correctas = 0\r\n    let Incorrectas = 0\r\n\r\n    const [TestFinalizado , setTestFinalizado] = useState(false)\r\n    \r\n    \r\n    for (let i = 0 ; i <= 3 ; i++) {\r\n        do {\r\n        Pregunta = Math.round(Math.random()*3)\r\n        }\r\n        while (PreguntasAgregadas.includes(Pregunta))\r\n        \r\n        NuevoOrdenPosibilidades.push(ListaPreguntas[indicePregunta].posibilidades[Pregunta])\r\n        PreguntasAgregadas.push(Pregunta)\r\n        IndicesOriginales.push(ListaPreguntas[indicePregunta].posibilidades.indexOf(Pregunta))\r\n    }\r\n\r\n        const confirmar =s=>{\r\n            s.preventDefault()\r\n            \r\n            if(Respuesta===undefined) {\r\n                alert('Indique una respuesta antes de continuar')\r\n                return\r\n            }\r\n\r\n            \r\n           /*  console.log(Respuesta.RtaElegida)\r\n            console.log(ListaPreguntas[indicePregunta].respuesta)\r\n            console.log(Respuesta.RtaElegida===ListaPreguntas[indicePregunta].respuesta) */\r\n            /* if (Respuesta.RtaElegida===ListaPreguntas[indicePregunta].respuesta){\r\n                Correctas++\r\n            }\r\n            else if (Respuesta.RtaElegida!==ListaPreguntas[indicePregunta].respuesta){\r\n                Incorrectas++\r\n            }\r\n             */\r\n            Respuesta.RtaElegida===ListaPreguntas[indicePregunta].respuesta ? Correctas++ : Incorrectas++\r\n\r\n\r\n            Respuestas.push(Respuesta)\r\n            console.log(Respuestas)\r\n            PreguntasRespondidas.push(indicePregunta)   \r\n            let indice\r\n            do {\r\n                indice = Math.round(Math.random()*(ListaPreguntas.length-1))\r\n             \r\n            }\r\n            while(PreguntasRespondidas.includes(indice))\r\n\r\n            if (PreguntasRespondidas.length===5) {\r\n                setTestFinalizado(true)\r\n                console.log(TestFinalizado)\r\n                return\r\n            }\r\n\r\n            setIndicePregunta(indice)\r\n        }\r\n\r\n\r\n    function HandleCheck (a) {\r\n        Respuesta = {\r\n            indicePregunta : indicePregunta,\r\n            RtaElegida : NuevoOrdenPosibilidades[a],\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n\r\n        return ( \r\n            <div>\r\n               {TestFinalizado && \r\n                <div className='TestFinalizado'> \r\n                    <h1>Test finalizado</h1>     \r\n                </div>\r\n\r\n               } \r\n\r\n              { !TestFinalizado && < div className='ComponentePregunta' >\r\n                <div>\r\n                    {ListaPreguntas[indicePregunta].pregunta}\r\n                        \r\n                    \r\n                    {ListaPreguntas[indicePregunta].lineas.map(linea=>(\r\n                        <p key={ListaPreguntas[indicePregunta].lineas.indexOf(linea)} >{linea}</p>\r\n                        \r\n                    ))\r\n                    }\r\n                    \r\n                </div>\r\n                    <div>\r\n                        <form onSubmit={confirmar}>\r\n                            <p> <input type='radio' name='opcion' onClick={()=>HandleCheck(0)}/> {NuevoOrdenPosibilidades[0]} </p> \r\n                            <p> <input type='radio' name='opcion' onClick={()=>HandleCheck(1)}/> {NuevoOrdenPosibilidades[1]} </p> \r\n                            <p> <input type='radio' name='opcion' onClick={()=>HandleCheck(2)}/> {NuevoOrdenPosibilidades[2]} </p> \r\n                            <p> <input type='radio' name='opcion' onClick={()=>HandleCheck(3)}/> {NuevoOrdenPosibilidades[3]} </p> \r\n                            <button type='submit' >Confirmar</button>\r\n                        </form>\r\n                    </div>\r\n                  \r\n                </div> }\r\n            </div>\r\n        );\r\n}\r\n \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}